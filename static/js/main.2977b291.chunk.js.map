{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","todoModel","handelEyeBtn","className","map","todo","classNames","id","completed","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","closeTodoModel","useState","isUserLoading","setIsUserLoading","userName","setUserName","getUserFromApi","userFromApi","name","useEffect","href","TodoFilter","query","setQuery","queryType","selectQueryType","value","onChange","event","target","placeholder","style","pointerEvents","App","isLoading","isTodoModel","visiableTodos","state","setState","getTodosFromApi","a","reseivedTodos","prevState","filteredTodos","checkTitle","toLowerCase","includes","filter","handelQuery","handelQueryType","find","setTodoModel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2977b291.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  todoModel: Todo | null,\n  handelEyeBtn: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, todoModel, handelEyeBtn } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': todo.id === todoModel?.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handelEyeBtn(todo.id)}\n              >\n                <span className=\"icon\">\n                  {\n                    todo.id === todoModel?.id\n                      ? <i className=\"far fa-eye-slash\" />\n                      : <i className=\"far fa-eye\" />\n                  }\n\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  closeTodoModel: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  closeTodoModel,\n}) => {\n  const [isUserLoading, setIsUserLoading] = useState(true);\n  const [userName, setUserName] = useState('');\n\n  const getUserFromApi = async (userId: number) => {\n    const userFromApi = await getUser(userId);\n\n    if (userFromApi) {\n      setIsUserLoading(false);\n\n      setUserName(userFromApi.name);\n    }\n  };\n\n  useEffect(() => {\n    getUserFromApi(todo.userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeTodoModel()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userName}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { QueryType } from '../../types/QueryType';\n\ntype Props = {\n  query: string,\n  setQuery: (value: string) => void,\n  queryType: QueryType,\n  selectQueryType: (value: QueryType) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    query,\n    setQuery,\n    queryType,\n    selectQueryType,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={queryType}\n            onChange={(event) => {\n              selectQueryType(event.target.value as QueryType);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoFilter } from './components/TodoFilter';\nimport { QueryType } from './types/QueryType';\n\ntype State = {\n  isLoading: boolean,\n  isTodoModel: boolean,\n  todos: Todo[],\n  visiableTodos: Todo[],\n  query: string,\n  queryType: QueryType,\n  todoModel: Todo | null,\n};\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState<State>({\n    isLoading: true,\n    isTodoModel: false,\n    todos: [],\n    visiableTodos: [],\n    query: '',\n    queryType: 'all',\n    todoModel: null,\n  });\n\n  const getTodosFromApi = async () => {\n    const reseivedTodos = await getTodos();\n\n    if (reseivedTodos) {\n      setState(prevState => {\n        return {\n          ...prevState,\n          isLoading: false,\n          todos: reseivedTodos,\n          visiableTodos: reseivedTodos,\n        };\n      });\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromApi();\n  }, []);\n\n  const setVisiableTodos = () => {\n    setState(prevState => {\n      const { todos, query, queryType } = prevState;\n      let filteredTodos = todos;\n\n      const checkTitle = (title: string) => {\n        return title.toLowerCase().includes(query.toLowerCase());\n      };\n\n      if (queryType === 'completed') {\n        filteredTodos = todos.filter(todo => todo.completed && checkTitle(todo.title));\n      }\n\n      if (queryType === 'active') {\n        filteredTodos = todos.filter(todo => !todo.completed && checkTitle(todo.title));\n      }\n\n      if (queryType === 'all') {\n        filteredTodos = todos.filter(todo => checkTitle(todo.title));\n      }\n\n      return {\n        ...prevState,\n        visiableTodos: filteredTodos,\n      };\n    });\n  };\n\n  useEffect(() => {\n    setVisiableTodos();\n  }, [state.query, state.queryType]);\n\n  const handelQuery = (value: string) => {\n    setState(prevState => {\n      return {\n        ...prevState,\n        query: value,\n      };\n    });\n  };\n\n  const handelQueryType = (value: QueryType) => {\n    setState(prevState => {\n      return {\n        ...prevState,\n        queryType: value,\n      };\n    });\n  };\n\n  const setTodoModel = (id: number) => {\n    const todoModel = state.visiableTodos\n      .find(todo => todo.id === id) || null;\n\n    setState(prevState => {\n      return {\n        ...prevState,\n        todoModel,\n      };\n    });\n  };\n\n  const handelCloseTodoModel = () => {\n    setState(prevState => {\n      return {\n        ...prevState,\n        todoModel: null,\n      };\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={state.query}\n                setQuery={(value: string) => handelQuery(value)}\n                queryType={state.queryType}\n                selectQueryType={(value: QueryType) => handelQueryType(value)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {state.isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={state.visiableTodos}\n                    todoModel={state.todoModel}\n                    handelEyeBtn={(id: number) => setTodoModel(id)}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {state.todoModel !== null && (\n        <TodoModal\n          todo={state.todoModel}\n          closeTodoModel={handelCloseTodoModel}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}